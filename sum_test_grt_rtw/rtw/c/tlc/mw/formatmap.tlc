%% ============================================================================
%%
%%
%%
%%
%% Abstract:
%%   This system file creates model.dt for code generation's RealTime and
%%   Embedded-c code formats. The map file contains the mapping information for
%%   monitoring block outputs and modifying block parameters.
%%
%% Copyright 1994-2023 The MathWorks, Inc.
%%
%selectfile NULL_FILE

%if EXISTS(_FORMATMAP_) == 0
%assign _FORMATMAP_ = 1

%realformat "CONCISE"

%assign DataTypeTransHdr = LibGetDataTypeTransHdrBaseName()
%if RTWVerbose
    %selectfile STDOUT
%%}
### Creating data type transition file %<DataTypeTransHdr>.h
%%{
    %selectfile NULL_FILE
%endif

%openfile ModelDotDT = "%<DataTypeTransHdr>.h"
/*
* %<DataTypeTransHdr>.h
*
%<SLibCommonHeaderInfo()>\
*/

%if ExtMode == 1
    #include "ext_types.h"
%endif

%assign equalSign = LibGetDataInitEqualSign()

%%
%% Datatype info for rapid accelerator
%%
%if ::isRAccel && LibGetNumDataTypesInModel() > 0
    static DataTypeInfo rtDataTypeInfoTable[]%<equalSign>
    {
        %<SLibDumpDataTypeInfoTable()>\
    };
%endif


%%
%% Sizes and names
%%
%if LibGetNumDataTypesInModel() > 0
    %assign charType = LibGetDataTypeNameFromId(::CompiledModel.tSS_CHAR)
    /* data type size table */
    %assign uintegerType = LibGetDataTypeNameFromId(::CompiledModel.tSS_UINTEGER)
    static %<uintegerType> rtDataTypeSizes[]%<equalSign>{
        %<SLibDumpDataTypeSizeTable()>\
    };

    /* data type name table */
    static const %<charType> * rtDataTypeNames[]%<equalSign>{
        %<SLibDumpDataTypeNameTable()>\
    };
%endif
%%
%% Block I/O
%%
%if !SLibBlockIODataTypeTransitionTableIsEmpty()

    /* data type transitions for block I/O structure */
    static DataTypeTransition rtBTransitions[]%<equalSign>{
        %<SLibDumpBlockIODataTypeTransitionTable()>\
    };

    /* data type transition table for block I/O structure */
    static DataTypeTransitionTable rtBTransTable%<equalSign>{
        %<SLibDumpBlockIOMapInfo()>\
    };
%endif
%%
%% Parameters
%%
%if !SLibParametersDataTypeTransitionTableIsEmpty()

    /* data type transitions for Parameters structure */
    static DataTypeTransition rtPTransitions[]%<equalSign>{
        %<SLibDumpParametersDataTypeTransitionTable()>\
    };

    /* data type transition table for Parameters structure */
    static DataTypeTransitionTable rtPTransTable%<equalSign>{
        %<SLibDumpParametersMapInfo()>\
    };
%endif

/* [EOF] %<DataTypeTransHdr>.h */
%closefile ModelDotDT
%<SLibAddGeneratedFileToList("%<DataTypeTransHdr>.h","interface","header","")>
%selectfile NULL_FILE

%endif %% _FORMATMAP_

%% [EOF] formatmap.tlc
