%% ============================================================================
%% File: prm_assignbuffers.tlc
%%
%% Abstract:
%%   Assign parameter buffers into appropriate files.
%%
%%
%%
%%
%% Copyright 1994-2023 The MathWorks, Inc.
%%
%% ============================================================================
%selectfile NULL_FILE

%if EXISTS(_PRM_ASSIGNBUFFERS_) == 0
%assign _PRM_ASSIGNBUFFERS_ = 1

%include "prm_cacheutils.tlc"

%% Function: SLibAssignPrmBuffers ==================================================================
%% Abstract:
%%   Assign parameter buffers into appropriate files.
%%
%function SLibAssignPrmBuffers() void

    %if !SLibPrmBufferIsEmpty("UnstructuredSimulinkGlobal", "Decl")
        %% FOR MODEL REFERENCE: SimulinkGlobal parameters treated like ExportedGlobal
        %assign declComment = "/* Model block global parameters (%<::AutoOrDefaultStorageClass> storage) */"
        %assign declBuffer = SLibGetPrmBuffer("UnstructuredSimulinkGlobal", "Decl")
        %<SLibCacheCodeToFile("data_simulinkGlobal_decl", declComment)>
        %<SLibCacheCodeToFile("data_simulinkGlobal_decl", declBuffer)>
    %endif
    %if ModelParameters.NumInrtP > 0
        %% Assign rtP structures to appropriate files for each system.
        %foreach sysIdx = NumSystems
            %assign sys = System[sysIdx]
            %if !SLibSystemPrmBufferIsEmpty(sys, "SimulinkGlobal", "Decl")
                %assert(!IsModelReferenceTarget() || IsModelReferenceInlineOffTarget() )
                %% Assign parameter structure declaration for each system
                %assign declBuffer = ...
                    SLibGetSystemPrmBuffer(sys, "SimulinkGlobal", "Decl")

                %assign isDeclBufferHideChildGuarded = TLC_FALSE
                %if IsModelReferenceInlineOffTarget()
                    %assign nonInlSysIdx = System[sysIdx].NonInlinedParentSystemIdx
                    %if !LibSystemIsReusedLibraryFcn(System[nonInlSysIdx]) && GenerateNonEmptyHideChildSymbol()
                        %assign isDeclBufferHideChildGuarded = TLC_TRUE
                        %if  !IsRemoveHideChildFeatureOn()
                            %assign declBuffer = GetHideChildDefineSymbol("ifndef") + "\n" + ...
                                declBuffer + "\n" + GetHideChildDefineSymbol("endif")
                        %endif
                    %endif
                %endif

                %if SLibIsSystemTypesModelClassNamespace(sys)
                    %<SLibCacheCPPEncapModelData("Typedefs", declBuffer)>
                %elseif isDeclBufferHideChildGuarded && IsRemoveHideChildFeatureOn() && ...
                    CGMODEL_ACCESS("CGModel.dumpSysCodeIntoModelFile", sysIdx)
                    %% only dumping to effective private file if system header == mdl header
                    %% todo: MODELREF-4590
                    %<SLibCacheCodeToFile("mdl_priv_constParam_typedef", declBuffer)>
                %else
                    %<SLibCacheSystemCodeToFile("sys_data_simulinkGlobal_decl", sys, declBuffer)>

                    %% ASSERT: Typedef can never be empty if the Decl is not empty
                    %assert !SLibSystemPrmBufferIsEmpty(sys, "SimulinkGlobal", "Typedef")
                %endif

                %% Assign parameter structure typedef for each system if the system
                %% is not an RLS. If it's an RLS, then this is emitted directly for the
                %% system. We check the non-inlined parent because we may have ForEach
                %% core subsystems, which have their own data scope, but may be generated
                %% to a shared function.
                %assign nonInlinedParent = System[sys.NonInlinedParentSystemIdx]
                %if !LibSystemIsReusedLibraryFcn(nonInlinedParent)
                    %assign typedefBuffer = ...
                        SLibGetSystemPrmBuffer(sys, "SimulinkGlobal", "Typedef")
                    %assign opFile = SLibGetFileRecForCode("data_simulinkGlobal_typedef")
                    %if !WHITE_SPACE(typedefBuffer)
                        %<SLibSetModelFileDeferredIncludeCoderTypes(opFile, TLC_TRUE)>
                        %<SLibSetModelFileAttribute(opFile, "Typedefs", typedefBuffer)>
                    %endif
                %else
                    %assign typedefBuffer = ...
                        SLibGetSystemPrmBuffer(sys, "SimulinkGlobal", "Typedef")
                    %<SLibCacheSystemCodeToFile("sys_data_simulinkGlobal_decl", nonInlinedParent, typedefBuffer)>
                %endif
            %endif
        %endforeach
    %endif

%endfunction %% SLibAssignPrmBuffers

%endif %% EXISTS(_PRM_ASSIGNBUFFERS_)

%% [EOF] prm_assignbuffers.tlc
